WHAT HAPPENS WHEN YOU INITIALIZE A REPOSITORY?  WHY DO YOU NEED TO DO IT?

Git places a hidden subdirectory named .git into the target directory.
Initializing a directory is necessary for Git to create a repository because Git utilizes the files within .git to perform its functions, e.g.create commits, track files, etc


HOW IS THE STAGING AREA DIFFERENT FROM THE WORKING DIRECTORY AND THE REPOSITORY?  WHAT VALUE DO YOU THINK IT OFFERS?

The working directory contains all the files in the repository.  The staging area contains only the files that are chosen to be tracked when a commit is created.  The repository is the logical group of all files, and their state, at given points in time (commits).

Obviously, the repository and commits are the essence of Git regarding version control.  The staging area offers another measure of control, in that files can be slated for inclusion into the history of the commits, when the user deems necessary.


HOW CAN YOU USE THE STAGING AREA TO MAKE SURE YOU HAVE ONE COMMIT PER LOGICAL CHANGE?

Using diff --staged, the staging area can be checked as a last step right before committing a change.  At this point, a last check can be made to insure one logical change is being committed.


WHAT ARE SOME SITUATIONS WHERE BRANCHES MIGHT BE HELPFUL IN KEEPING YOUR HISTORY ORGANIZED?  HOW WOULD BRANCHES HELP?

Branches would be helpful when trying out new featurs, making different versions for different languages


HOW DO THE DIAGRAMS HELP YOU VISUALIZE THE BRANCH STRUCTURE?

By providing an image I can see with my eyes.


WHAT IS THE RESULT OF MERGING TWO BRANCHES TOGETHER?  WHY DO WE REPRESENT IT IN THE DIAGRAM THE WAY WE DO?

The commits of each branch are combined, and the result is one master branch.  The merge is represented with the diagram to clarify understanding of
what is taking place in the merge.  The diagram shows a picture of concepts, such as the parents of the branches, which makes it much easier to understand.


WHAT ARE THE PROS AND CONS OF GIT'S AUTOMATIC MERGING VS ALWAYS DOING MERGES MANUALLY?

Of course, automatic merging has its obvious advantage, which is speed and convenience.  The negative side to auto merging would be the possible unintended result, where unwanted items are kept, or wanted items are removed.
Manual merges would eliminate the negative side of auto merging due to the fact that the user is manually determining what is included and what is excluded, but the process, I imagine, could take forever, which is big negative.

Even with the possible unintended results of auto merging, which hopefully are few and far in between, the results can manually be corrected after the fact.  But in light of the enormous time savings offerred by auto merging, I see the advantages outweighing the disadvantages by a wide margin.

